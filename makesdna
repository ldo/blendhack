#!/usr/bin/python3
#+
# This script captures the output from the makesdna executable that is
# built along with Blender in a form that I hope to use in future for
# writing .blend files. Invoke it as follows:
#
#     makesdna <builddir>/bin/makesdna <srcdir>/source/blender/makesdna/
#
# where the first argument is the path to the makesdna executable, and
# the second is the path to the subdirectory in the Blender source tree
# containing the .h files for the makesdna executable to read. The encoded,
# compressed SDNA block will be written to standard output as a Python bytes
# expression.
#
# Copyright 2012 Lawrence D'Oliveiro <ldo@geek-central.gen.nz>.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#-

import sys
import re
import subprocess
import bz2 as compressor # compression cuts size down by half

if len(sys.argv) != 3 :
    raise RuntimeError("usage: %s <builddir>/bin/makesdna <srcdir>/source/blender/makesdna/" % sys.argv[0])
#end if
prog = sys.argv[1]
dna_dir = sys.argv[2]
if not dna_dir.endswith("/") :
    dna_dir += "/" # prog won't work otherwise
#end if
rawdata = subprocess.Popen \
  (
    args = (prog, "/dev/stdout", "/dev/null", "/dev/null", dna_dir),
    stdout = subprocess.PIPE,
  ).communicate()[0].decode("utf-8")
uncompressed = []
while True :
    nextbyte = re.search(r"(\d+)\,", rawdata)
    if nextbyte == None :
        break
    uncompressed.append(int(nextbyte.expand(r"\1")))
    rawdata = rawdata[nextbyte.span()[1]:]
#end while
compressed = list(compressor.compress(bytes(uncompressed)))
sys.stdout.write("sdna = bytes([\n")
line_started = False
line_len = 0
while len(compressed) != 0 :
    thisbyte = "%d" % compressed[0]
    compressed = compressed[1:]
    if line_len + 1 + len(thisbyte) + 1 > 72 :
        sys.stdout.write("\n   ")
        line_len = 3
    #end if
    line_started = True
    sys.stdout.write(" " + thisbyte + ",")
    line_len += len(thisbyte) + 2
#end while
if line_started :
    sys.stdout.write("\n")
#end if
sys.stdout.write("])\n")
